{"version":3,"sources":["webpack:///./src/components/post/PostContainer.jsx","webpack:///./src/components/post/PostDate.jsx","webpack:///./src/components/post/PostNavigator.jsx","webpack:///./src/components/post/PostTitle.jsx","webpack:///./src/components/utterances/index.jsx","webpack:///./src/templates/blog-post.js"],"names":["PostContainer","html","dangerouslySetInnerHTML","__html","PostDate","date","className","PostNavigator","pageContext","previous","next","to","fields","slug","rel","frontmatter","title","PostTitle","Utterances","repo","rootElm","React","createRef","useEffect","isDarkTheme","Dom","THEME","DARK","utterances","document","createElement","utterancesConfig","src","branch","theme","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","current","appendChild","ref","pageQuery","data","location","ScrollManager","post","markdownRemark","metaData","site","siteMetadata","comment","siteUrl","author","sponsor","disqusShortName","postTitle","description","excerpt"],"mappings":"uSAKeA,MAHf,YAAkC,IAATC,EAAQ,EAARA,KACvB,OAAO,yBAAKC,wBAAyB,CAAEC,OAAQF,M,UCIlCG,MAHf,YAA6B,IAATC,EAAQ,EAARA,KAClB,OAAO,uBAAGC,UAAU,aAAaD,I,sBCsBpBE,MAtBf,YAAyC,IAAhBC,EAAe,EAAfA,YACfC,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KAElB,OACE,wBAAIJ,UAAU,aACZ,4BACGG,GACC,kBAAC,OAAD,CAAME,GAAIF,EAASG,OAAOC,KAAMC,IAAI,QAApC,KACKL,EAASM,YAAYC,QAI9B,4BACGN,GACC,kBAAC,OAAD,CAAMC,GAAID,EAAKE,OAAOC,KAAMC,IAAI,QAC7BJ,EAAKK,YAAYC,MADpB,SCdKC,MAJf,YAA+B,IAAVD,EAAS,EAATA,MACnB,OAAO,4BAAKA,I,8ECkCCE,MA1Bf,YAA+B,IAATC,EAAQ,EAARA,KACdC,EAAUC,IAAMC,YAsBtB,OApBAC,qBAAU,WACR,IAAMC,EAAcC,IAAmBC,IAAMC,MACvCC,EAAaC,SAASC,cAAc,UACpCC,EAAmB,CACvBC,IAZM,gCAaNb,OACAc,OAbS,SAcTC,MAAOV,EAbM,cACC,eAadW,MAAO,UACPC,OAAO,EACP,aAAc,WACdC,YAAa,aAGfC,OAAOC,KAAKR,GAAkBS,SAAQ,SAAAC,GACpCb,EAAWc,aAAaD,EAAWV,EAAiBU,OAEtDrB,EAAQuB,QAAQC,YAAYhB,KAC3B,IAEI,yBAAKtB,UAAU,aAAauC,IAAKzB,K,YCY7B0B,G,oBA1BE,sBAAsC,IAAnCC,EAAkC,EAAlCA,KAAMvC,EAA4B,EAA5BA,YAAawC,EAAe,EAAfA,SACnCzB,qBAAU,WAER,OADA0B,MACO,kBAAMA,SACZ,IAEH,IAAMC,EAAOH,EAAKI,eACZC,EAAWL,EAAKM,KAAKC,aACnBtC,EAA6CoC,EAA7CpC,MAAOuC,EAAsCH,EAAtCG,QACU3B,GAD4BwB,EAA7BI,QAA6BJ,EAApBK,OAAoBL,EAAZM,QACDH,EAAhCI,gBAAgCJ,EAAf3B,YATyB,EAUfsB,EAAKnC,YAAzB6C,EAVmC,EAU1C5C,MAAkBX,EAVwB,EAUxBA,KAE1B,OACE,kBAAC,IAAD,CAAQ2C,SAAUA,EAAUhC,MAAOA,GACjC,kBAAC,IAAD,CAAMA,MAAO4C,EAAWC,YAAaX,EAAKY,UAC1C,kBAAC,EAAD,CAAW9C,MAAO4C,IAClB,kBAAC,EAAD,CAAUvD,KAAMA,IAChB,kBAAC,EAAD,CAAeJ,KAAMiD,EAAKjD,OAC1B,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAeO,YAAaA,MACzBoB,GAAc,kBAAC,EAAD,CAAYT,KAAMS,MAKnB","file":"component---src-templates-blog-post-js-21fecdfcce1deadda92f.js","sourcesContent":["import React from 'react'\n\nfunction PostContainer({ html }) {\n  return <div dangerouslySetInnerHTML={{ __html: html }} />\n}\nexport default PostContainer\n","import React from 'react'\n\nimport './styles/PostDate.scss'\n\nfunction PostDate({ date }) {\n  return <p className=\"post-date\">{date}</p>\n}\nexport default PostDate\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './styles/PostNavigator.scss'\n\nfunction PostNavigator({ pageContext }) {\n  const { previous, next } = pageContext\n\n  return (\n    <ul className=\"navigator\">\n      <li>\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n      </li>\n      <li>\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </li>\n    </ul>\n  )\n}\nexport default PostNavigator\n","import React from 'react'\nfunction PostTitle({ title }) {\n  return <h1>{title}</h1>\n}\n\nexport default PostTitle\n","import React, { useEffect } from 'react'\n\nimport * as Dom from '../../utils/dom'\nimport { THEME } from '../../constants'\n\nconst src = 'https://utteranc.es/client.js'\nconst branch = 'master'\nconst DARK_THEME = 'photon-dark'\nconst LIGHT_THEME = 'github-light'\n\nfunction Utterances({ repo }) {\n  const rootElm = React.createRef()\n\n  useEffect(() => {\n    const isDarkTheme = Dom.hasClassOfBody(THEME.DARK)\n    const utterances = document.createElement('script')\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      theme: isDarkTheme ? DARK_THEME : LIGHT_THEME,\n      label: 'comment',\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n    }\n\n    Object.keys(utterancesConfig).forEach(configKey => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    rootElm.current.appendChild(utterances)\n  }, [])\n\n  return <div className=\"utterances\" ref={rootElm} />\n}\n\nexport default Utterances\n","import React, { useEffect } from 'react'\nimport { graphql } from 'gatsby'\n\nimport { Hr } from '../components/extra'\nimport Layout from '../layout'\nimport Head from '../components/head'\nimport {\n  PostContainer,\n  PostDate,\n  PostNavigator,\n  PostTitle,\n} from '../components/post'\nimport Bio from '../components/bio'\nimport Utterances from '../components/utterances'\nimport * as ScrollManager from '../utils/scroll'\n\nimport '../styles/code.scss'\nimport 'katex/dist/katex.min.css'\n\nexport default ({ data, pageContext, location }) => {\n  useEffect(() => {\n    ScrollManager.init()\n    return () => ScrollManager.destroy()\n  }, [])\n\n  const post = data.markdownRemark\n  const metaData = data.site.siteMetadata\n  const { title, comment, siteUrl, author, sponsor } = metaData\n  const { disqusShortName, utterances } = comment\n  const { title: postTitle, date } = post.frontmatter\n\n  return (\n    <Layout location={location} title={title}>\n      <Head title={postTitle} description={post.excerpt} />\n      <PostTitle title={postTitle} />\n      <PostDate date={date} />\n      <PostContainer html={post.html} />\n      <Hr />\n      <Bio />\n      <PostNavigator pageContext={pageContext} />\n      {!!utterances && <Utterances repo={utterances} />}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n        comment {\n          disqusShortName\n          utterances\n        }\n        sponsor {\n          buyMeACoffeeId\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 280)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}